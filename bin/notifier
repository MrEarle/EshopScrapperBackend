#! /app/.heroku/node/bin/node

const { sendNotification, sendPushedNotification } = require('../src/helpers/fcm')
const { checkGame } = require('../src/helpers/scrapper')
const orm = require('../src/models')

const notifier = async () => {
  const games = await orm.Watchlist.findAll({
    include: [{
      model: orm.User,
      where: { device: { [orm.Sequelize.Op.not]: null } },
      through: { attributes: ['maxPrice'] }
    }]
  })

  const checklist = games.map(({ gameId, url, name, Users }) => ({
    gameId,
    url,
    name,
    users: Users.map(({ device, Subscription, usePushed }) => ({ device, maxPrice: Subscription.maxPrice, usePushed }))
  }))

  return Promise.all(checklist.map(async ({ gameId, url, name, users }) => {
    const { price, result } = await checkGame(url)
      .then(({ price }) => ({ price, result: true }))
      .catch(() => ({ result: false }))
    if (!result) return 'Error when checking game!'

    if (!price) return 'Missing Price!'

    await orm.Watchlist.update({
      currentPrice: price,
      priceUpdatedAt: Date.now()
    }, {
      where: { gameId }
    })


    return Promise.all(users.map(async ({ device, maxPrice, usePushed }) => {
      if (price <= maxPrice) {
        if (usePushed) {
          return sendPushedNotification(url, `${name}\nPrice: ${price}`, device)
        } else {
          return sendNotification(name, `Price: ${price}`, device)
        }
      }
    }))
  }))
}

notifier().then(() => process.exit())
